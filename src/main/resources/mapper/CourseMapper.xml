<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jeju.dao.CourseDao">
	<!-- 들어간 아이디 값을 course_route 테이블에도 넣어줘야 하므로,
	그 아이디를 dto에 넣어줘야 함 -->
	<insert id="insertCourse" parameterType="CourseDto">
		insert into course (usercode, name, spendingtime, timestandard, distance, briefcontent, longdetail, registereddate)
		values (#{usercode}, #{name}, #{spendingtime}, #{timestandard}, #{distance}, #{briefcontent}, #{longdetail}, now())
		<selectKey keyProperty="coursecode" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<select id="selectAllCourses" resultType="CourseDto">
		select * from course order by coursecode desc
	</select>
	
	<select id="getTotalCount" resultType="int">
		select count(*) from course
	</select>
	
	<select id="selectAllCoursesInPage" parameterType="Map" resultType="CourseDto">
		select * from course
		order by coursecode desc
		limit #{coursePerPage} offset #{startIndex}
	</select>
	
	<select id="selectOneCourse" parameterType="int" resultType="CourseDto">
		select * from course where coursecode = #{coursecode}
	</select>
	
	<update id="incrementReadcount" parameterType="int">
		update course set readcount = readcount + 1 where coursecode = #{coursecode}
	</update>
	
	<delete id="deleteCourse" parameterType="int">
		delete from course where coursecode = #{coursecode}
	</delete>
	
	<select id="getSearchedCount" parameterType="Map" resultType="int">
		select count(*) from course c
		where name like concat('%', #{query}, '%')
		<if test="numstd != ''">
			and
			(select count(*) from course_route where coursecode = c.coursecode)
			<if test="numstd == '이상'">&gt;=</if><if test="numstd == '이하'">&lt;=</if>#{count}
		</if>
	</select>
	
	<select id="selectSearchedCoursesInPage" parameterType="Map" resultType="CourseDto">
		select * from course c
		where name like concat('%', #{query}, '%')
		<if test="numstd != ''">
			and
			(select count(*) from course_route where coursecode = c.coursecode)
			<if test="numstd == '이상'">&gt;=</if><if test="numstd == '이하'">&lt;=</if>#{count}
		</if>
		order by 
		<if test="sortstd == '조회수'">
		readcount desc,
		</if>
		<if test="sortstd == '좋아요'">
		(select count(*) from course_likes where coursecode = c.coursecode) desc,
		</if>
		coursecode desc
		limit #{coursePerPage} offset #{startIndex}
	</select>
</mapper>
